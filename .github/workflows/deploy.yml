# This is a basic workflow to help you get started with Actions

name: Build & Deploy with Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    name: Deploy site to prod
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Latest Branch
        uses: actions/checkout@v3
        # make sure to cd into dungenerator-front-end

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm -v

      - name: Install Dependencies
        run: cd dungenerator-front-end && npm install

      - name: Build from Repo
        run: cd dungenerator-front-end && npm run build && ls $$ echo $GITHUB_WORKSPACE

      - name: Connect via SSH to Deploy
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{secrets.DUNGENERATOR_PRIVATE_KEY}}
          ARGS: "-rltgoDzvO --delete"
          REMOTE_HOST: ${{secrets.DUNGENERATOR_SSH_HOST}}
          REMOTE_USER: ${{secrets.DUNGENERATOR_SERVER_USERNAME}}
          SOURCE: "dist/"
          EXCLUDE: "/node_modules/", "/dist/"

#     - name: Run a one-line script on server
#       uses: appleboy/ssh-action@v0.1.5
#       with:
#         host: ${{secrets.DUNGENERATOR_SSH_HOST}} #IP Address of server we're SSHing into
#         key: ${{secrets.DUNGENERATOR_PRIVATE_KEY}} # Private key of server.
#         username: ${{secrets.DUNGENERATOR_SERVER_USERNAME}}
#         # break into steps with names and "run" instead of "script"
#         script: |
#             set -e
#             echo 'checking npm'
#             echo $PATH
#             npm -v
#           # Make a folder to clone code
#           mkdir prod
#           cd prod
#           git clone git@github.com:arusk2/dungenerator-frontend.git
#           echo 'Successfully cloned frontend'
#           cd dungenerator-frontend/dungenerator-front-end

#           echo 'Attempting to install dependencies'
#           # Install dependendies
#           npm install

#           # build dist folder from source code
#           npm run build

#           # move dist folder to where nginx knows to look for the html
#           sudo cp -r dist /var/www/html/Vue/
#           cd ~
#           # Remove code artifacts, keeping dist folder in above directory
#           # rm -rf prod

